#!/usr/bin/env groovy
pipeline {
  agent any
  tools {nodejs "latest"}
  environment {
    LOCAL_JSON = ''
    extJSHelper = ''
    OWNER = 'bcgov'
    TESTS_REPO_NAME = 'educ-pen-reg-automation'
  }
  stages {
    stage('Initialize') {
      steps {
        script {
          sh "wget -O - https://raw.githubusercontent.com/bcgov/EDUC-INFRA-COMMON/master/openshift/common-deployment/deployHelpers.js > deployHelpers.js"
          extJSHelper = evaluate readFile('deployHelpers.js')
        }
        dir('frontend') {
          script {
            LOCAL_JSON = sh(script: 'oc -n 8878b4-dev -o json get secret test-cafe-config | sed -n \'s/.*"local.json": "\\(.*\\)"/\\1/p\' | base64 --decode', returnStdout: true).trim()
            writeFile file: '/var/lib/jenkins/jobs/TEST/jobs/TestCafeWorkflows/jobs/TestSuites/jobs/regression-test-part-2/workspace/frontend/tests/e2e/config/index.js', text: LOCAL_JSON
          }
        }
      }
    }
    stage('get and delete pen request one') {
      steps {
        dir('frontend') {
          sh 'npm install'
          sh 'npm run getAndDeletePenRequestData'
        }
      }
    }
    stage('get and delete ump request one') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeleteUmpRequestData'
        }
      }
    }        
    stage('staff action on draft pen request') {
      steps {
        script {
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'staff-action-on-draft-pen-request-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
        }
      }
    }
    stage('get and delete pen request two') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeletePenRequestData'
        }
      }
    }

    stage('get and delete ump request two') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeleteUmpRequestData'
        }
      }
    }    
    stage('staff action on draft ump request') {
      steps {
        script {
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'staff-action-on-draft-ump-request-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
        }
      }
    }
    stage('get and delete ump request three') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeleteUmpRequestData'
        }
      }
    }
    // stage('Insert and Update Pen request data to abandoned') {
    //   steps {
    //     dir('frontend') {
    //       sh 'npm run insertAndUpdatePenRequestDataToAbandoned'
    //     }
    //   }
    // }   
    // stage('staff can not action abandoned pen request') {
    //   steps {
    //     script {
    //       TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
    //       extJSHelper.triggerWorkflow(TOKEN, 'staff-can-not-action-abandoned-pen-request-test-environment')
    //       extJSHelper.waitForWorkflowRunComplete(TOKEN)
    //     }
    //   }
    // }
    // stage('get and delete pen request three') {
    //   steps {
    //     dir('frontend') {
    //       sh 'npm run getAndDeletePenRequestData'
    //     }
    //   }
    // }
    stage('staff issue pen to student and unlink') {
      steps {
        script {
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'staff-issue-pen-and-unlink-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
        }
      }
    }    
    stage('get and delete pen request four') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeletePenRequestData'
        }
      }
    }
    stage('staff force unlink') {
      steps {
        script {
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'staff-force-unlink-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
        }
      }
    }
    stage('get and delete pen request five') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeletePenRequestData'
        }
      }
    }
    stage('staff search update reset student info and compare pens') {
      steps {
        script {
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'staff-search-update-reset-student-info-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
        }
      }
    }                                    
  }
}