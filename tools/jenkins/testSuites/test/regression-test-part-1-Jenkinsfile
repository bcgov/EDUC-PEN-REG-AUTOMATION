#!/usr/bin/env groovy
pipeline {
  agent any
  tools {nodejs "latest"}
  environment {
    LOCAL_JSON = ''
    extJSHelper = ''
    OWNER = 'bcgov'
    TESTS_REPO_NAME = 'educ-pen-reg-automation'
  }
  stages {
    stage('Initialize network') {
      steps {
          script {
            sh(script: 'oc process -f https://raw.githubusercontent.com/bcgov/EDUC-INFRA-COMMON/master/openshift/common-ns/ocp4/knp/common-ns-policies-e2e.yaml -p COMMON_NAMESPACE_PREFIX=8878b4 -p ENVIRONMENT=tools | oc -n 75e61b-dev create -f -', returnStdout: true)
          }
      }
    }    
    stage('Initialize') {
      steps {
        script {
          sh "wget -O - https://raw.githubusercontent.com/bcgov/EDUC-INFRA-COMMON/master/openshift/common-deployment/deployHelpers.js > deployHelpers.js"
          extJSHelper = evaluate readFile('deployHelpers.js')
        }
        dir('frontend') {
          script {
            LOCAL_JSON = sh(script: 'oc -n 8878b4-dev -o json get secret test-cafe-config | sed -n \'s/.*"local.json": "\\(.*\\)"/\\1/p\' | base64 --decode', returnStdout: true).trim()
            writeFile file: '/var/lib/jenkins/jobs/TEST/jobs/TestCafeWorkflows/jobs/TestSuites/jobs/regression-test-part-1/workspace/frontend/tests/e2e/config/index.js', text: LOCAL_JSON
          }
        }
      }
    }
    stage('get and delete pen request one') {
      steps {
        dir('frontend') {
          sh 'npm install'
          sh 'npm run getAndDeletePenRequestData'
        }
      }
    }    
    stage('staff request more info and reject on pen') {
      steps {
        script {
          try{
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'staff-request-more-info-and-reject-pen-request-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
          }
          catch(err){
            currentBuild.result = 'FAILURE'
            echo "Error detected, Continue to the next step"
          }          
        }
      }
    }
    stage('get and delete pen request two') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeletePenRequestData'
        }
      }
    }

    stage('get and delete ump request one') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeleteUmpRequestData'
        }
      }
    }    
    stage('staff request more info and reject on ump') {
      steps {
        script {
          try{
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'staff-request-more-info-and-reject-ump-request-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
          }
          catch(err){
            currentBuild.result = 'FAILURE'
            echo "Error detected, Continue to the next step"
          }          
        }
      }
    }
    stage('get and delete ump request two') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeleteUmpRequestData'
        }
      }
    }    
    stage('staff complete gmp and then complete ump') {
      steps {
        script {
          try{
          TOKEN = sh( script: "oc -n 8878b4-dev -o json get secret github-actions-token | sed -n 's/.*\"token\": \"\\(.*\\)\"/\\1/p' | base64 --decode", returnStdout: true);
          extJSHelper.triggerWorkflow(TOKEN, 'student-submit-name-change-after-pen-complete-test-environment')
          extJSHelper.waitForWorkflowRunComplete(TOKEN)
          }
          catch(err){
            currentBuild.result = 'FAILURE'
            echo "Error detected, Continue to the next step"
          }          
        }
      }
    }
    stage('get and delete pen request three') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeletePenRequestData'
        }
      }
    }
    stage('get and delete ump request three') {
      steps {
        dir('frontend') {
          sh 'npm run getAndDeleteUmpRequestData'
        }
      }
    }
    stage('Tear-down network') {
      steps {
          script {
            sh(script: 'oc -n 75e61b-dev delete networkpolicy -l name=allow-traffic-from-jenkins-pen-tools', returnStdout: true)
          }
      }
    }                            
  }
}